<RubikSolver>:
	canvas:
		Rectangle:
			pos: self.pos
			size: self.size
			source: 'data/bg.png'

<MainMenu>:
	name: 'home'

	RelativeLayout:

		Label:
			text: 'Rubik Solv-O-Matic'
			font_size: 30
			pos_hint: {'center_y': 0.875}
			bold: True
			color: (0, 1, 0, 1)

		Label:
			text: 'Insert the cube and click Scan to continue.'
			font_size: 20
			pos_hint: {'center_y': 0.75}
			color: (0, 1, 0, 1)

		Button:
			text: 'Settings'
			font_size: 20
			background_color: (0.5, 0.5, 0.5, 1)
			size_hint: None, None
			width: 100
			height: 40
			pos_hint: {'left': 0, 'bottom': 0}
			on_release:
				app.go_screen('settings', 'right')

		Button:
			text: 'Scan'
			font_size: 20
			bold: True
			background_color: (0, 1, 0, 1)
			size_hint: None, None
			width: 100
			height: 40
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			on_release:
				app.go_screen('scan', 'left')

<Scan>:
	name: 'scan'
	
	RelativeLayout:
		id: scan_rel
		
		size_hint: None, None
		size: app.crop_config['size'], app.crop_config['size']
		pos_hint: {'center_x': 0.5, 'center_y': 0.5}
		Image:
			id: scan_img

<DragBox>:
	canvas:
		Color:
			rgba: 1, 1, 1, 0.5
		Rectangle:
			pos: self.pos
			size: self.size
	drag_rectangle: self.x, self.y, self.width, self.height
	drag_timeout: 10000000
	drag_distance: 0
	size_hint: None, None
	
<SiteBox>:
	canvas:
		Color:
			rgba: 1, 1, 1, 0.5
		Rectangle:
			pos: self.pos
			size: self.size
	drag_rectangle: self.x, self.y, self.width, self.height
	drag_timeout: 10000000
	drag_distance: 0
	size_hint: None, None
		
<Settings>:
	name: 'settings'

	TabbedPanel:
		id: tp
		do_default_tab: False
		tab_width: 80

		TabbedPanelItem:
			id: tab_manual
			text: 'Manual'
			
			BoxLayout:
				padding: 20
				BoxLayout:
					orientation: 'vertical'
					Label:
						text: 'Select face to twist:'
					Spinner:
						id: move_to_face
						text: 'Up'
						size_hint: (None, None)
						size: (100, 40)
						pos_hint: {'center_x': 0.5}
						values: ('Up', 'Right', 'Front', 'Down', 'Left', 'Back')
					BoxLayout:
						Button:
							size_hint: (None, None)
							size: (90, 40)
							text: 'Twist CCW'
							on_release:
								gripper = app.move_cube(None, None, move_to_face.text[0])
								app.move_cube(gripper, 'twist', '-')
						Button:
							size_hint: (None, None)
							size: (90, 40)
							text: 'Twist CW'
							on_release:
								gripper = app.move_cube(None, None, move_to_face.text[0])
								app.move_cube(gripper, 'twist', '+')
					Label:
						text: ''
						size_hint: (None, None)
				Image:
					size_hint: None, None
					size: 200, 200
					pos_hint: {'center_y': 0.5}
					source: 'testimg\\uface.jpg'

		TabbedPanelItem:
			id: tab_crop
			text: 'Crop'

			on_release: root.add_crop_img()

			FloatLayout:
				id: crop_float
				Label:
					text: 'Size'
					bold: True
					pos: -210, 100
				Slider:
					id: crop_slider
					orientation: 'vertical'
					size_hint: None, None
					height: 180
					pos: -15, 50
					range: (20, app.imgy)
					step: 2
					value: app.crop_config['size']
					on_value: app.update_config('Crop', 'size', self.value)
				RelativeLayout:
					id: crop_rel
					size_hint: None, None
					size: app.imgx, app.imgy
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					Image:
						id: crop_img
					DragBox:
						id: crop_box
						width: crop_slider.value
						height: crop_slider.value
						pos: app.center_to_ll((app.crop_config['center_x'], app.crop_config['center_y']), (app.imgx, app.imgy), crop_slider.value, True)
						text: '+'
						on_pos:
							center = app.ll_to_center((self.x, self.y), (app.imgx, app.imgy), crop_slider.value, True)
							app.update_config('Crop', 'center_x', center[0])
							app.update_config('Crop', 'center_y', center[1])
							
		TabbedPanelItem:
			id: tab_sites
			text: 'Sites'

			on_release: root.add_sites_img()

			FloatLayout:
				id: sites_float
				Label:
					text: 'Size'
					bold: True
					pos: -210, 100
				Slider:
					id: site_slider
					orientation: 'vertical'
					size_hint: None, None
					height: 180
					pos: -15, 50
					range: (6, 50)
					step: 2
					value: app.site_config['size']
					on_value:
						app.update_config('Sites', 'size', self.value)
						root.add_sites_boxes()
				RelativeLayout:
					id: sites_rel
					size_hint: None, None
					size: crop_slider.value, crop_slider.value
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					Image:
						id: sites_img

		TabbedPanelItem:
			id: tab_grip
			text: 'Grippers'
			BoxLayout:
				BoxLayout:
					id: gripper_a
					orientation: 'vertical'

					Label:
						text: 'Gripper A'
						font_size: 20

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Closed'
						Slider:
							name: 'closed'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							step: 1
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Open'
						Slider:
							name: 'open'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							step: 1
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Load'
						Slider:
							name: 'load'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							step: 1
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:  0'
						Slider:
							name: 'pos0'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos: 90'
						Slider:
							name: 'pos90'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:180'
						Slider:
							name: 'pos180'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:270'
						Slider:
							name: 'pos270'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

				BoxLayout:
					id: gripper_b
					orientation: 'vertical'

					Label:
						text: 'Gripper B'
						font_size: 20

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Closed'
						Slider:
							name: 'closed'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							step: 1
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Open'
						Slider:
							name: 'open'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							step: 1
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Load'
						Slider:
							name: 'load'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							step: 1
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:  0'
						Slider:
							name: 'pos0'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos: 90'
						Slider:
							name: 'pos90'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:180'
						Slider:
							name: 'pos180'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:270'
						Slider:
							name: 'pos270'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

		TabbedPanelItem:
			id: tab_exit
			text: 'Exit'
			FloatLayout:
				Button:
					text: 'Back To Main'
					size_hint: None, None
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					size: 140, 50
					font_size: 18
					bold: True
					on_release: app.go_screen('home', 'left')
