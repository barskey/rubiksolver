<RubikSolver>:
	canvas:
		Rectangle:
			pos: self.pos
			size: self.size
			source: 'data/bg.png'

<MainMenu>:
	name: 'home'

	RelativeLayout:

		Label:
			text: 'Rubik Solv-O-Matic'
			font_size: 30
			pos_hint: {'center_y': 0.875}
			bold: True
			color: (0, 1, 0, 1)

		Label:
			text: 'Insert the cube and click Scan to continue.'
			font_size: 20
			pos_hint: {'center_y': 0.75}
			color: (0, 1, 0, 1)

		Button:
			text: 'Settings'
			font_size: 16
			background_color: (0.5, 0.5, 0.5, 1)
			size_hint: None, None
			width: 100
			height: 40
			pos_hint: {'left': 0, 'bottom': 0}
			on_release: app.go_screen('settings', 'right')

		Button:
			text: 'Scan'
			font_size: 20
			bold: True
			background_color: (0, 1, 0, 1)
			size_hint: None, None
			width: 100
			height: 40
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			on_release: app.go_screen('scan', 'left')

<ColorBox>:
	canvas:
		Color:
			rgb: 0, 0, 0
		Rectangle:
			pos: self.pos
			size: app.site_size + 4, app.site_size + 4
	size_hint: None, None
	size: app.site_size + 4, app.site_size + 4

<LabelBox>:
	canvas:
		Color:
			rgb: 0, 0, 0
		Rectangle:
			pos: self.pos
			size: app.site_size * 2 + 4, app.site_size + 4
	size_hint: None, None
	size: app.site_size * 2 + 4, app.site_size + 4

<Scan>:
	name: 'scan'

	FloatLayout:
		id: scan_float

		RelativeLayout:
			id: scan_rel

			size_hint: None, None
			size: app.crop_size, app.crop_size
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			Image:
				id: scan_img
		
		Label:
			id: scan_status
			text: ''
			halign: 'center'
			font_size: 16
			color: (0, 1, 0, 1)
			size_hint: None, None
			pos: root.width / 2 - self.width / 2, root.height - self.height / 2 - 30
			
		Button:
			id: btn_next
			text: 'Continue'
			size_hint: None, None
			bold: True
			background_color: [0, 1, 0, 1]
			size: 100, 40
			pos: root.width - self.width - 10, 10
			on_release: root.scan_cube()

<SolveLabel>:
	font_size: 16
	bold: True
	size_hint: None, None
	size: 120, 20
	color: (1, 0.5, 0, 1)

<Solve>:
	name: 'solve'
	canvas:
		Color:
			rgba: 0, 0, 0, 0.5
		Rectangle:
			pos: 40, 80
			size: 400, 200

	FloatLayout:
		id: solve_float
		
		Label:
			text: 'Ready To Solve!'
			halign: 'center'
			font_size: 18
			bold: True
			color: (0, 1, 0, 1)
			size_hint: None, None
			pos: root.width/2 - self.width/2, root.height - self.height/2 - 20
		Label:
			text: 'Solve to:'
			color: (1, 0.5, 0, 1)
			bold: True
			font_size: 16
			size_hint: None, None
			pos: img_solve.x + 25, img_solve.y - 65
		Button:
			id: btn_select
			text: 'Solid Cube'
			size_hint: (None, None)
			pos: img_solve.x, img_solve.y - 75
			size: 150, 40
			on_release: root._dropdown.open(self)
		Image:
			id: img_solve
			size_hint: None, None
			size: 140, 140
			pos: root.width/2 - self.width/2 - 80, root.height/2 - self.height/2 + 20
		SolveLabel:
			text: 'Solve to:'
			pos: 290, 210
		SolveLabel:
			id: solve_to
			text: 'Solid Cube'
			color: (1, 1, 1, 1)
			pos: 290, 190
		SolveLabel:
			text: 'Moves to solve:'
			pos: 290, 160
		SolveLabel:
			id: moves_req
			text: ''
			color: (1, 1, 1, 1)
			pos: 290, 140
		Button:
			id: btn_solve
			text: 'Solve'
			size_hint: None, None
			bold: True
			background_color: [0, 1, 0, 1]
			size: 100, 40
			pos: root.width - self.width - 10, 10
			on_release: root.run_solve()
			
<DragBox>:
	canvas:
		Color:
			rgba: 1, 1, 1, 0.5
		Rectangle:
			pos: self.pos
			size: self.size
	drag_rectangle: self.x, self.y, self.width, self.height
	drag_timeout: 10000000
	drag_distance: 0
	size_hint: None, None

<SiteBox>:
	canvas:
		Color:
			rgba: 1, 1, 1, 0.5
		Rectangle:
			pos: self.pos
			size: self.size
	drag_rectangle: self.x, self.y, self.width, self.height
	drag_timeout: 10000000
	drag_distance: 0
	size_hint: None, None

<Settings>:
	name: 'settings'

	TabbedPanel:
		id: tp
		do_default_tab: False
		tab_width: 80

		TabbedPanelItem:
			id: tab_manual
			text: 'Manual'

			BoxLayout:
				padding: 20
				BoxLayout:
					orientation: 'vertical'
					Label:
						text: 'Gripper A:     '
					BoxLayout:
						Button:
							size_hint: (None, None)
							size: (70, 40)
							text: 'Open'
							on_release: app.move_cube('A', 'grip', 'o')
						Button:
							size_hint: (None, None)
							size: (70, 40)
							text: 'Close'
							on_release: app.move_cube('A', 'grip', 'c')
						Button:
							size_hint: (None, None)
							size: (70, 40)
							text: 'Load'
							on_release: app.move_cube('A', 'grip', 'l')
					BoxLayout:
						Button:
							size_hint: (None, None)
							size: (105, 40)
							text: 'Twist CCW'
							on_release: app.move_cube('A', 'twist', '-')
						Button:
							size_hint: (None, None)
							size: (105, 40)
							text: 'Twist CW'
							on_release: app.move_cube('A', 'twist', '+')
					Label:
						text: 'Gripper B:     '
					BoxLayout:
						Button:
							size_hint: (None, None)
							size: (70, 40)
							text: 'Open'
							on_release: app.move_cube('B', 'grip', 'o')
						Button:
							size_hint: (None, None)
							size: (70, 40)
							text: 'Close'
							on_release: app.move_cube('B', 'grip', 'c')
						Button:
							size_hint: (None, None)
							size: (70, 40)
							text: 'Load'
							on_release: app.move_cube('B', 'grip', 'l')
					BoxLayout:
						Button:
							size_hint: (None, None)
							size: (105, 40)
							text: 'Twist CCW'
							on_release: app.move_cube('B', 'twist', '-')
						Button:
							size_hint: (None, None)
							size: (105, 40)
							text: 'Twist CW'
							on_release: app.move_cube('B', 'twist', '+')

				Image:
					size_hint: None, None
					size: 200, 200
					pos_hint: {'center_y': 0.5}
					source: 'testimg/uface.jpg'

		TabbedPanelItem:
			id: tab_crop
			text: 'Crop'

			on_release: root.add_crop_img()

			FloatLayout:
				id: crop_float
				Label:
					text: 'Size'
					bold: True
					pos: -210, 100
				Slider:
					id: crop_slider
					orientation: 'vertical'
					size_hint: None, None
					height: 180
					pos: -15, 50
					range: (20, app.imgy)
					step: 2
					value: app.crop_size
					on_value: app.update_config('Crop', 'size', self.value)
				RelativeLayout:
					id: crop_rel
					size_hint: None, None
					size: app.imgx, app.imgy
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					Image:
						id: crop_img
					DragBox:
						id: crop_box
						width: crop_slider.value
						height: crop_slider.value
						pos: app.center_to_ll((app.crop_center), (app.imgx, app.imgy), crop_slider.value, True)
						text: '+'
						on_pos:
							center = app.ll_to_center((self.x, self.y), (app.imgx, app.imgy), crop_slider.value, True)
							app.update_config('Crop', 'center_x', center[0])
							app.update_config('Crop', 'center_y', center[1])

		TabbedPanelItem:
			id: tab_sites
			text: 'Sites'

			on_release:
				root.add_img(sites_img)
				root.add_boxes(sites_rel, root._sites_boxes)

			FloatLayout:
				id: sites_float
				Label:
					text: 'Size'
					bold: True
					pos: -175, 100
				Slider:
					id: site_slider
					orientation: 'vertical'
					size_hint: None, None
					height: 180
					pos: 15, 50
					range: (6, 50)
					step: 2
					value: app.site_size
					on_value:
						app.update_config('Sites', 'size', self.value)
				RelativeLayout:
					id: sites_rel
					size_hint: None, None
					size: crop_slider.value, crop_slider.value
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					Image:
						id: sites_img

		TabbedPanelItem:
			id: tab_colors
			text: 'Colors'

			on_release:
				root.add_img(colors_img)
				root.add_boxes(colors_rel, root._colors_boxes)
				root.add_colors(colors_rel)

			FloatLayout:
				id: colors_float
				RelativeLayout:
					id: colors_rel
					size_hint: None, None
					size: crop_slider.value, crop_slider.value
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					Image:
						id: colors_img

		TabbedPanelItem:
			id: tab_grip
			text: 'Grippers'
			BoxLayout:
				BoxLayout:
					id: gripper_a
					orientation: 'vertical'

					Label:
						text: 'Gripper A'
						font_size: 20

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Closed'
						Slider:
							name: 'closed'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							step: 1
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Open'
						Slider:
							name: 'open'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							step: 1
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Load'
						Slider:
							name: 'load'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							step: 1
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:  0'
						Slider:
							name: 'pos0'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos: 90'
						Slider:
							name: 'pos90'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:180'
						Slider:
							name: 'pos180'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:270'
						Slider:
							name: 'pos270'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							step: 1
							on_value: app.update_config('TwistA', self.name, self.value)

				BoxLayout:
					id: gripper_b
					orientation: 'vertical'

					Label:
						text: 'Gripper B'
						font_size: 20

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Closed'
						Slider:
							name: 'closed'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							step: 1
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Open'
						Slider:
							name: 'open'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							step: 1
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Load'
						Slider:
							name: 'load'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							step: 1
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:  0'
						Slider:
							name: 'pos0'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos: 90'
						Slider:
							name: 'pos90'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:180'
						Slider:
							name: 'pos180'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:270'
						Slider:
							name: 'pos270'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							step: 1
							on_value: app.update_config('TwistB', self.name, self.value)

		TabbedPanelItem:
			id: tab_exit
			text: 'Exit'
			FloatLayout:
				Button:
					text: 'Back To Main'
					size_hint: None, None
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					size: 140, 50
					font_size: 18
					bold: True
					on_release: app.go_screen('home', 'left')
