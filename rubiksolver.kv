<RubikSolver>:
	canvas:
		Rectangle:
			pos: self.pos
			size: self.size
			source: 'data/bg.png'

<MainMenu>:
	name: 'home'

	RelativeLayout:

		Label:
			text: 'Rubik Solv-O-Matic'
			font_size: 30
			pos_hint: {'center_y': 0.875}
			bold: True
			color: (0, 1, 0, 1)

		Label:
			text: 'Insert the cube and click Scan to continue.'
			font_size: 20
			pos_hint: {'center_y': 0.75}
			color: (0, 1, 0, 1)

		Button:
			text: 'Settings'
			font_size: 20
			background_color: (0.5, 0.5, 0.5, 1)
			size_hint: None, None
			width: 100
			height: 40
			pos_hint: {'left': 0, 'bottom': 0}
			on_release:
				app.go_screen('settings', 'right')

		Button:
			text: 'Scan'
			font_size: 20
			bold: True
			background_color: (0, 1, 0, 1)
			size_hint: None, None
			width: 100
			height: 40
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			on_release:
				app.go_screen('scan', 'None')

<SettingsSlider>:
	step: 1

<CropBox>:
	canvas:
		Color:
			rgba: 1, 0.5, 0.5, 0.5
		Rectangle:
			pos: self.pos
			size: self.size
	drag_rectangle: self.x, self.y, self.width, self.height
	drag_timeout: 10000000
	drag_distance: 0
	
<Settings>:
	name: 'settings'

	TabbedPanel:
		id: tp
		do_default_tab: False

		TabbedPanelItem:
			id: tab_sites
			text: 'Sites'
					
			FloatLayout:

		TabbedPanelItem:
			id: tab_crop
			text: 'Crop'
			
			FloatLayout:
				canvas:
					Color:
						rgba: .5, .5, .5, 1
					Rectangle:
						pos: self.width / 2 - 180, self.height / 2 - 120
						size: (360, 240)
				Label:
					text: 'Size'
					bold: True
					pos: -210, 100
				Slider:
					id: size_slider
					orientation: 'vertical'
					size_hint: None, None
					height: 180
					pos: -15, 50
					range: (20, 240)
					step: 1
					value: app.crop_config['size']
					on_value: app.update_config('Crop', 'size', self.value)
				CropBox:
					id: crop_box
					size_hint: None, None
					width: root.ids.size_slider.value
					height: root.ids.size_slider.value
					text: 'Drag Me'
					on_pos:
						app.update_config('Crop', 'center_x', self.x + self.width / 2)
						print self.x + self.width / 2
						app.update_config('Crop', 'center_y', self.y + self.height / 2)
						print self.y + self.height / 2

		TabbedPanelItem:
			id: tab_grip
			text: 'Grippers'
			BoxLayout:
				BoxLayout:
					id: gripper_a
					orientation: 'vertical'

					Label:
						text: 'Gripper A'
						font_size: 20

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Closed'
						SettingsSlider:
							name: 'closed'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Open'
						SettingsSlider:
							name: 'open'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Load'
						SettingsSlider:
							name: 'load'
							min: app.grip_a_config[self.name] - 20
							max: app.grip_a_config[self.name] + 20
							value: app.grip_a_config[self.name]
							on_value: app.update_config('GripA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:  0'
						SettingsSlider:
							name: 'pos0'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos: 90'
						SettingsSlider:
							name: 'pos90'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:180'
						SettingsSlider:
							name: 'pos180'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							on_value: app.update_config('TwistA', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:270'
						SettingsSlider:
							name: 'pos270'
							min: app.twist_a_config[self.name] - 20
							max: app.twist_a_config[self.name] + 20
							value: app.twist_a_config[self.name]
							on_value: app.update_config('TwistA', self.name, self.value)

				BoxLayout:
					id: gripper_b
					orientation: 'vertical'

					Label:
						text: 'Gripper B'
						font_size: 20

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Closed'
						SettingsSlider:
							name: 'closed'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Open'
						SettingsSlider:
							name: 'open'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Load'
						SettingsSlider:
							name: 'load'
							min: app.grip_b_config[self.name] - 20
							max: app.grip_b_config[self.name] + 20
							value: app.grip_b_config[self.name]
							on_value: app.update_config('GripB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:  0'
						SettingsSlider:
							name: 'pos0'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos: 90'
						SettingsSlider:
							name: 'pos90'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:180'
						SettingsSlider:
							name: 'pos180'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							on_value: app.update_config('TwistB', self.name, self.value)

					BoxLayout:
						orientation: 'horizontal'
						Button:
							text: 'Pos:270'
						SettingsSlider:
							name: 'pos270'
							min: app.twist_b_config[self.name] - 20
							max: app.twist_b_config[self.name] + 20
							value: app.twist_b_config[self.name]
							on_value: app.update_config('TwistB', self.name, self.value)

		TabbedPanelItem:
			id: tab_test
			text: 'Test'
			BoxLayout:
				Label:
					text: 'Test Tab'
		
		TabbedPanelItem:
			id: tab_exit
			text: 'Exit'
			FloatLayout:
				Button:
					text: 'Back To Main'
					size_hint: None, None
					pos_hint: {'center_x': 0.5, 'center_y': 0.5}
					size: 140, 50
					font_size: 18
					bold: True
					on_release: app.exit_config()
